The first Apple II computers went on sale on June 6, 1977 with a MOS Technology 6502 microprocessor running at 1 MHz, 4 kB of RAM, an audio cassette interface for loading programs and storing data, and the Integer BASIC programming language built into the ROMs. The video controller displayed 24 lines by 40 columns of monochrome, upper-case-only text on the screen, with NTSC composite video output suitable for display on a monitor, or on a TV set by way of an RF modulator. The original retail price of the computer was US$1298 (with 4 KB of RAM) and US$2638 (with the maximum 48 KB of RAM). To reflect the computer's color graphics capability, the Apple logo on the casing was represented using rainbow stripes,[1] which remained a part of Apple's corporate logo until early 1998. The earliest Apple IIs were assembled in Silicon Valley, and later in Texas;[2] printed circuit boards were manufactured in Ireland and Singapore.In 1978, an external 5 1/4-inch floppy disk drive, the Disk II, attached via a controller card that plugged into one of the computer's expansion slots (usually slot 6), was used for data storage and retrieval to replace cassettes. The Disk II interface, created by Steve Wozniak, was regarded as an engineering masterpiece at the time for its economy of components.[3][4] While other controllers had dozens of chips for synchronizing data I/O with disk rotation, seeking the head to the appropriate track, and encoding the data into magnetic pulses, Wozniak's controller card had few chips; instead, the Apple DOS used software to perform these functions. The Group Code Recording used by the controller was simpler and easier to implement in software than the more common MFM. In the end, the low chip count of the controller contributed to making Apple's Disk II the first affordable floppy drive system for personal computers. As a side effect, Wozniak's scheme made it easy for proprietary software developers to copy-protect the media on which their software shipped by changing the low-level sector format or stepping the drive's head between the tracks; inevitably, other companies eventually sold software to foil this protection. Another Wozniak optimization allowed him to omit Shugart's Track-0 sensor. When the Operating System wants to go to track 0, the controller simply moves forty times toward the next-lower-numbered track, relying on the mechanical stop to prevent it going any further down than track 0. This process, called "recalibration", made a loud buzzing (rapid mechanical chattering) sound that often frightened Apple novices.The approach taken in the Disk II controller was typical of Wozniak's design sensibility. The Apple II was full of clever engineering tricks to save hardware and reduce costs. For example, taking advantage of the way that 6502 instructions only access memory every other clock cycle, the video generation circuitry's memory access on the otherwise unused cycles avoided memory contention issues and also eliminated the need for a separate refresh circuit for the DRAM chips.Rather than using a complex analog-to-digital circuit to read the outputs of the game controller, Wozniak used a simple timer circuit whose period was proportional to the resistance of the game controller, and used a software loop to measure the timer.The text and graphics screens had a somewhat outdated arrangement (the scanlines were not stored in sequential areas of memory) which was reputedly due to Wozniak's realization that doing it that way would save a chip; it was less expensive to have software calculate or look up the address of the required scanline than to include the extra hardware. Similarly, in the high-resolution graphics mode, color was determined by pixel position and could thus be implemented in software, saving Wozniak the chips needed to convert bit patterns to colors. This also allowed for sub-pixel font rendering since orange and blue pixels appeared half a pixel-width further to the right on the screen than green and purple pixels.[5]Color on the Apple II series took advantage of a quirk of the NTSC television signal standard, which made color display really easy (and cheap) to implement. The original NTSC television signal specification was black-and-white. Color was tacked on later by adding a 3.58 MHz subcarrier signal that was ignored by B&W TV sets. Color is encoded based on the phase of this signal in relation to a reference color burst signal. The result is that the position, size, and intensity of a series of pulses define color information. These pulses can translate into pixels on the computer screen.The Apple II display provided two pixels per subcarrier cycle. When the color burst reference signal was turned on and the computer attached to a color display, it could display green by showing one alternating pattern of pixels, magenta with an opposite pattern of alternating pixels, and white by placing two pixels next to each other. Later, blue and orange became available by tweaking the offset of the pixels by half a pixel-width in relation to the colorburst signal. The high-resolution enhanced display offered more colors simply by compressing more, narrower pixels into each subcarrier cycle. The coarse, low-resolution graphics display mode worked differently, as it could output a short burst of high-frequency signal per pixel to offer more color options.The epitome of the Apple II design philosophy was the Apple II sound circuitry. Rather than having a dedicated sound-synthesis chip, the Apple II had a toggle circuit that could only emit a click through a built-in speaker or a line out jack; all other sounds (including two, three and, eventually, four-voice music and playback of audio samples and speech synthesis) were generated entirely by clever software that clicked the speaker at just the right times. Not for nearly a decade would an Apple II be released with a dedicated sound chip. Similar techniques were used for cassette storage: the cassette output worked the same as the speaker, and the input was a simple zero-crossing detector that served as a relatively crude (1-bit) audio digitizer. Routines in the ROM were used to encode and decode data in frequency shift keying for the cassette.Wozniak's open design and the Apple II's multiple expansion slots permitted a wide variety of third-party devices to expand the capabilities of the machine. Apple II peripheral cards such as Serial controllers, improved display controllers, memory boards, hard disks, and networking components were available for this system in its day. There were emulator cards, such as the Z80 card that permitted the Apple to switch to the Z80 processor and run a multitude of programs developed under the CP/M operating system, including the dBase II database and the WordStar word processor. (At one point in the mid-1980s, more than half the machines running CP/M were Apple II's with Z80 cards.)There was also a third-party 6809 card that would allow OS-9 Level One to be run. The Mockingboard sound card greatly improved the audio capabilities of the Apple, with simple music synthesis and text-to-speech functions. Eventually, Apple II accelerator cards were created to double or quadruple the computer's speed.SOURCE: WIKIPEDIA 6/2008